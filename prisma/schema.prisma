generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id                  String               @id @default(uuid())
  firstName           String               @map("first_name")
  lastName            String               @map("last_name")
  email               String               @unique
  passwordHash        String               @map("password_hash")
  role                UserRole             @default(user)
  isActive            Boolean              @default(true) @map("is_active")
  emailVerified       Boolean              @default(false) @map("email_verified")
  passwordChangedAt   DateTime?            @map("password_changed_at")
  createdAt           DateTime             @default(now()) @map("created_at")
  updatedAt           DateTime             @updatedAt @map("updated_at")
  passwordResetTokens PasswordResetToken[]
  sessions            UserSession[]

  @@map("users")
}

model PasswordResetToken {
  id        String    @id @default(uuid())
  userId    String    @map("user_id")
  token     String    @unique
  expiresAt DateTime  @map("expires_at")
  usedAt    DateTime? @map("used_at")
  createdAt DateTime  @default(now()) @map("created_at")
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("password_reset_tokens")
}

model UserSession {
  id           String   @id @default(uuid())
  userId       String   @map("user_id")
  sessionToken String   @unique @map("session_token")
  expiresAt    DateTime @map("expires_at")
  createdAt    DateTime @default(now()) @map("created_at")
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_sessions")
}

enum UserRole {
  user
  admin
}
